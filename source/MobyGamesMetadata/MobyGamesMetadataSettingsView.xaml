<UserControl x:Class="MobyGamesMetadata.MobyGamesMetadataSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:moby="clr-namespace:MobyGamesMetadata"
             xmlns:pec="clr-namespace:PlayniteExtensions.Common"
             d:DataContext="{d:DesignInstance Type=moby:MobyGamesMetadataSettingsViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="600">
    <TabControl>
        <TabControl.Resources>
            <pec:IntegerFormatConverter x:Key="intConverter"/>
            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,5"/>
            </Style>
            <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="IsTextSearchEnabled" Value="False"/>
                <Setter Property="IsEditable" Value="False"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="Width" Value="162"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>
        </TabControl.Resources>
        <TabItem Header="Settings">
            <StackPanel Margin="20">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="15"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="API Key:" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center"/>
                    <TextBox Name="ApiKeyTextbox" Text="{Binding Settings.ApiKey}" Margin="10,0,0,0" Grid.Column="1" Grid.Row="0" VerticalAlignment="Center"/>
                    <Button Content="Get API Key" Grid.Column="2" Grid.Row="0" VerticalAlignment="Center"
                        Command="{Binding GetApiKeyCommand}" Margin="10,0,0,0"/>

                    <CheckBox Grid.Row="2" Grid.Column="1" Margin="10,0" Content="Show top panel button to add metadata to multiple games" IsChecked="{Binding Settings.ShowTopPanelButton}"/>
                </Grid>
            </StackPanel>
        </TabItem>
        <TabItem Header="Genres">
            <TabItem.Resources>
                <CollectionViewSource x:Key="GenresCollection" Source="{Binding Settings.Genres}">
                    <CollectionViewSource.GroupDescriptions>
                        <PropertyGroupDescription PropertyName="Category"/>
                    </CollectionViewSource.GroupDescriptions>
                </CollectionViewSource>
            </TabItem.Resources>
            <Grid Margin="20" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock TextWrapping="Wrap" Grid.Row="0" Margin="0,0,0,5">
                    You can select multiple items with ctrl- or shift-clicking.
                    Set import targets or name overrides for all selected genres with the right-click menu.
                </TextBlock>
                <ListView ItemsSource="{Binding Source={StaticResource GenresCollection}}" Name="GenreSettingsView" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                      ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False"
                      VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.IsVirtualizingWhenGrouping="True" VirtualizingPanel.VirtualizationMode="Recycling"
                      d:ItemsSource="{d:SampleData ItemCount=50}" Grid.Row="1">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Name" Width="150" DisplayMemberBinding="{Binding Name}" />
                            <GridViewColumn Header="Import to">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding DataContext.ImportTargets, RelativeSource={RelativeSource AncestorType=UserControl}}" SelectedItem="{Binding ImportTarget}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Name override">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="150" Text="{Binding NameOverride}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" Style="{StaticResource BaseTextBlockStyle}" FontSize="20" FontWeight="Bold"/>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Set import target" ItemsSource="{Binding ImportTargets}">
                                <MenuItem.Resources>
                                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                        <EventSetter Event="Click" Handler="SetImportTarget_Click"/>
                                    </Style>
                                </MenuItem.Resources>
                            </MenuItem>
                            <MenuItem Header="Set name override">
                                <MenuItem Header="[Name]" Click="SetNameOverride_Name"/>
                                <MenuItem Header="[Category]: [Name]" Click="SetNameOverride_Category"/>
                                <MenuItem Header="[Custom prefix]: [Name]" Click="SetNameOverride_CustomPrefix"/>
                                <MenuItem Header="Remove" Click="SetNameOverride_Remove"/>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
            </Grid>
        </TabItem>
        <TabItem Header="Covers">
            <ScrollViewer>
                <StackPanel Margin="20" ScrollViewer.VerticalScrollBarVisibility="Visible">
                    <TextBlock TextWrapping="Wrap">
                        Images smaller than either of the minimum dimensions or not matching the orientation will be ignored.<LineBreak/>
                        Currently only the main cover for a game will be used, not platform-specific alternatives.
                    </TextBlock>
                    <Grid Width="Auto" Margin="0,0,0,10">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="0,0,5,0">Minimum dimensions:</TextBlock>
                        <WrapPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                            <TextBox Width="70" Text="{Binding Settings.Cover.MinWidth, Converter={StaticResource intConverter}}"/>
                            <TextBlock Margin="0,0,5,0">w x</TextBlock>
                            <TextBox Width="70" Text="{Binding Settings.Cover.MinHeight, Converter={StaticResource intConverter}}"/>
                            <TextBlock>h</TextBlock>
                        </WrapPanel>

                        <TextBlock Grid.Row="2" Grid.Column="0" TextWrapping="Wrap">Orientation:</TextBlock>
                        <ComboBox Grid.Row="1" Grid.Column="1" IsReadOnly="True" IsEditable="False" ItemsSource="{Binding AspectRatios}" SelectedItem="{Binding Settings.Cover.AspectRatio}"/>
                    </Grid>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="Backgrounds">
            <ScrollViewer>
                <StackPanel Margin="20">
                    <TextBlock TextWrapping="Wrap">
                        Images smaller than either of the minimum dimensions or not matching the orientation will be ignored.<LineBreak/>
                        Currently only screenshots will be retrieved, no promo images. This is due to API limitations.
                    </TextBlock>
                    <Grid Width="Auto" Margin="0,0,0,10">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="0,0,5,0">Minimum dimensions:</TextBlock>
                        <WrapPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                            <TextBox Width="70" Text="{Binding Settings.Background.MinWidth, Converter={StaticResource intConverter}}"/>
                            <TextBlock Margin="0,0,5,0">w x</TextBlock>
                            <TextBox Width="70" Text="{Binding Settings.Background.MinHeight, Converter={StaticResource intConverter}}"/>
                            <TextBlock>h</TextBlock>
                        </WrapPanel>

                        <TextBlock Grid.Row="1" Grid.Column="0" TextWrapping="Wrap">Orientation:</TextBlock>
                        <ComboBox Grid.Row="1" Grid.Column="1" IsReadOnly="True" IsEditable="False" ItemsSource="{Binding AspectRatios}" SelectedItem="{Binding Settings.Background.AspectRatio}"/>
                    </Grid>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
    </TabControl>
</UserControl>